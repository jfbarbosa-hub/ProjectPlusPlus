package ProjectPlus.editor;

/*Generated by MPS */

import java.util.Map;
import org.jetbrains.mps.openapi.model.SNode;
import javax.swing.JComponent;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import java.util.HashMap;

public class GlobalSwingComponentsRegistry {
  private static GlobalSwingComponentsRegistry registry = new GlobalSwingComponentsRegistry();

  private Map<SNode, Map<String, JComponent>> components;

  private GlobalSwingComponentsRegistry() {
    components = MapSequence.fromMap(new HashMap<SNode, Map<String, JComponent>>());
  }

  public void setRegisteredComponent(SNode nodeIdentifier, String componentRole, JComponent component) {
    if (!((MapSequence.fromMap(components).containsKey(nodeIdentifier)))) {
      MapSequence.fromMap(components).put(nodeIdentifier, MapSequence.fromMap(new HashMap<String, JComponent>()));
    }
    MapSequence.fromMap(MapSequence.fromMap(components).get(nodeIdentifier)).put(componentRole, component);
  }

  public JComponent getRegisteredComponent(SNode nodeIdentifier, String componentRole) {
    if (!((MapSequence.fromMap(components).containsKey(nodeIdentifier)))) {
      throw new IllegalArgumentException("Node unknown");
    }
    if (!((MapSequence.fromMap(MapSequence.fromMap(components).get(nodeIdentifier)).containsKey(componentRole)))) {
      throw new IllegalArgumentException("Role unknown");
    }
    return MapSequence.fromMap(MapSequence.fromMap(components).get(nodeIdentifier)).get(componentRole);
  }

  public static GlobalSwingComponentsRegistry getInstance() {
    return registry;
  }
}
